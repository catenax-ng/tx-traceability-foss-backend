image:
  repository: ghcr.io/catenax-ng/tx-traceability-foss-backend
  tag: $ARGOCD_APP_REVISION

springprofile: dev #will be set as dev

nameOverride: "traceability-foss-backend"
fullnameOverride: "traceability-foss-backend"

podSecurityContext:
  runAsUser: 10001
  seccompProfile:
    type: RuntimeDefault

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
securityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 3000
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 512Mi

ingress:
  enabled: false
#  className: "nginx"
#  annotations:
#    nginx.ingress.kubernetes.io/backend-protocol: HTTP
#  hosts:
#    - host: "traceability.pre-prod.demo.catena-x.net"
#      paths:
#        - path: /
#          pathType: ImplementationSpecific
#  tls:
#    - hosts:
#      - "traceability.pre-prod.demo.catena-x.net"
#      secretName: tls-secret

traceability:
  bpn: ""
  url: ""

datasource:
  url: jdbc:postgresql://product-traceability-foss-backend-postgresql:5432/trace
  username: trace
  password: "" # Must match postgresql: auth: password

oauth2:
  clientId: ""
  clientSecret: ""
  clientTokenUri: ""
  jwkSetUri: ""
  resourceClient: ""

edc:
  apiKey: ""
  providerUrl: ""

postgresql:
  enabled: true
  auth:
    postgresPassword: ""
    password: "" # Must match datasource: password
    database: "trace"
    username: "trace"

pgadmin4:
  enabled: false

irs-helm:
  enabled: false

irs-edc-consumer:
  enabled: false
